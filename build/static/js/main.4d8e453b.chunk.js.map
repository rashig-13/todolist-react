{"version":3,"sources":["Todo.js","Todolist.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","Todolist","todos","map","LOCAL_STORAGE_ITEM","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","console","log","prevTodos","uuidv4","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAEe,SAASA,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,WAIjC,OACE,8BACI,kCACI,uBAAQC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SANxD,WACIJ,EAAWD,EAAKM,OAMfN,EAAKO,UCPC,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAMR,EAAa,EAAbA,WACtC,OAEGQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,oBCH1BK,EAAmB,eA8CVC,MA5Cf,WACE,MAAyBC,mBAAS,IAAlC,mBAAOJ,EAAP,KAAaK,EAAb,KACMC,EAAYC,mBA+BlB,OA9BAC,qBAAU,WACR,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQX,IAC/CO,GAAaJ,EAASI,KACzB,IAEFD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IAwBF,qCACC,cAACD,EAAD,CAAsBP,WAvBxB,SAAoBK,GAClB,IAAMmB,EAAS,YAAIhB,GACbT,EAAKyB,EAASC,MAAK,SAAA1B,GAAI,OAAIA,EAAKM,KAAMA,KAC5CN,EAAKI,UAAUJ,EAAKI,SACpBU,EAASW,IAmBqChB,MAAOA,GAAtCA,GACf,uBAAOkB,IAAKZ,EAAab,KAAK,SAC9B,wBAAQ0B,QAlBX,SAAuBC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACrB,KAATxB,IACHyB,QAAQC,IAAI1B,GACZO,GAAS,SAAAoB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE5B,GAAI6B,MAAU5B,KAAMA,EAAMH,UAAU,QAE9DW,EAAYe,QAAQC,MAAQ,OAW3B,sBACA,wBAAQH,QATX,WACE,IAAMH,EAAShB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAC1CU,EAASW,IAOR,+BACA,gCAAMhB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAAUiC,OAA3C,qBCxCLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d8e453b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({todo,toggleTodo}) {\n    function handleTodoClick(){\n        toggleTodo(todo.id)\n    }\n  return (\n    <div>\n        <label >\n            <input  type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\n        {todo.name}\n        </label>\n        \n     \n    </div>\n  )\n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function Todolist({todos,toggleTodo}) {\n  return (\n   \n     todos.map(todo =>{\n         return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\n     })\n    \n  )\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Todolist from './Todolist';\nimport uuidv4 from 'uuid/dist/v4'\n\nconst LOCAL_STORAGE_ITEM='todoapp.todo';\n\nfunction App() {\n  const [todos,setTodos] = useState([]);\n  const todoNameRef=useRef();\n  useEffect(()=>{\n    const storedTodos=JSON.parse(localStorage.getItem(LOCAL_STORAGE_ITEM))\n    if(storedTodos) setTodos(storedTodos)\n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_ITEM,JSON.stringify(todos)) \n   },[todos])\n\n   function toggleTodo(id){\n     const newTodos=[...todos]\n     const todo=newTodos.find(todo => todo.id ===id)\n     todo.complete=!todo.complete;\n     setTodos(newTodos)\n   }\n\n  function handleAddTodo(e){\n    const name = todoNameRef.current.value;\n    if(name === '') return ;\n    console.log(name);\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos(){\n    const newTodos=todos.filter(todo => !todo.complete);\n    setTodos(newTodos)\n  }\n  return (\n    <>\n     <Todolist key={todos} toggleTodo={toggleTodo} todos={todos} />\n     <input ref={todoNameRef} type=\"text\" />\n     <button onClick={handleAddTodo}>Add Todo</button>\n     <button onClick={handleClearTodos}>Clear checkedTodo</button>\n     <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n     </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}